{{ 'main-product.css' | asset_url | stylesheet_tag }}


<section class="product" style="--pd-top-product: {{ section.settings.top_padding }}px; --pd-bottom-product: {{ section.settings.bottom_padding }}px">
  <div class="container">
    <div class="product-detail">
      <div class="product-detail__img">
        <div class="product-detail__img-slider">
          {% form 'product', product %}
            {%- if product.variants.size > 1 -%}
              <div class="product-detail__wrap w-100 hg-100">
                <div class="product__image-item">
                  {%- for variant in product.variants -%}
                    <div class="product__item"><img
                        src="{{ variant.image | img_url: 'medium' }}"
                        alt=""
                        class="image-item {% if forloop.first %}active{% endif %}"
                        data-variant-id="{{ variant.id }}"></div>
                  {%- endfor -%}
                </div>
                <div class="product__image-control">
                  <a href="#" class="slider__control slider__prev">{% render 'icon-chevron-left' %}</a>
                  <div class="slider__counter"></div>

                  <a href="#" class="slider__control slider__next">{% render 'icon-chevron-right' %}</a>
                </div>
              </div>
            {%- else -%}
              {%- for image in product.images -%}
                <img
                  src="{{ image | img_url: 'medium' }}"
                  alt=""
                  class="hg-100 image-cover">
              {%- endfor -%}
            {%- endif -%}

          {% endform %}
        </div>
        <div class="product-detail__featureImg">
          {%- for image in product.images -%}
            <img src="{{ image | img_url: 'medium' }}" alt="">
          {%- endfor -%}
        </div>
      </div>

      <div class="product-detail__item js-product__item d-flex flex-column">
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'vendor' -%}
            <p class="h5 mb-16 text-uppercase">{{ product.vendor }}</p>
            {%- when 'heading' -%}
            <a href="{{ product.url }}" class="product-detail__item-title mb-16">{{ product.title }}</a>

            {%- when 'price' -%}
            <div class="d-flex">
              {%- if product.compare_at_price_min != 0 -%}
                <span class="h4 mr-10 compare-price">{{ product.compare_at_price_min | money }}</span>
              {%- endif -%}
              <span class="label mb-16">{{ product.price | money_with_currency }}</span>
            </div>

            {% form 'product', product %}

              <div class="add-to-cart product-form__item mt-20">
                <h3 class="h3 fw-400 mb-12">Color</h3>
                <div class="product__item-color d-flex flex-wrap">
                  {% for variant in product.variants %}
                    <label class="product-form__item-color h5 {% if forloop.first %}active{% endif %} {% if variant.inventory_quantity < 1 %}button-not-allowed {%- else -%} cursor-pointer {% endif %}">
                      <input
                        class="product-select"
                        type="radio"
                        {% if variant.inventory_quantity < 1 %}disabled="disabled"{% endif %}{% if forloop.first %}checked{% endif %}
                        name="id"
                        value="{{ variant.id }}"> {{ variant.title }}
                    </label>
                  {% endfor %}
                </div>

                <h3 class="label mt-16 mb-12">
                  Quantity</h3>
                {% render 'quantity-button', value: 1, name: 'quantity' %}

                <button type="button" class="add-to-cart-btn button border w-100 mt-16 cursor-pointer">Add to cart</button>

                <button type="submit" class="button button-outline border black w-100 mt-8 cursor-pointer">Buy now</button>
              </div>
            {% endform %}

            {%- when 'description' -%}
            <p class="h3 mt-16 mb-16">Inspired by the structural boxy form and shape of a brick, which lends its name, the bag is perfectly sized for your everyday essentials, from a large phone to your wallet and lipstick.</p>

            {%- when 'collapsible' -%}
            <div class="product-accordion">
              <input
                id="accordion-trigger-1"
                class="accordion-trigger-input"
                type="checkbox" />
              <div class="d-flex align-items-center justify-content-between accordion-heading">
                {%- if block.settings.icon == 'icon-ruler' -%}
                  {% render 'icon-ruler' %}
                {%- elsif block.settings.icon == 'icon-materials' -%}
                  {% render 'icon-materials' %}
                {%- elsif block.settings.icon == 'icon-leaf' -%}
                  {% render 'icon-leaf' %}
                {%- elsif block.settings.icon == 'icon-iron' -%}
                  {% render 'icon-iron' %}

                {%- endif -%}
                <label class="accordion-trigger" for="accordion-trigger-1">{{ block.settings.heading }}</label>
                <i class="chevron-down">{% render 'icon-chevron-down' %}</i>
                <i class="d-none chevron-up">{% render 'icon-chevron-up' %}</i>
              </div>
              <div class="accordion-animation-wrapper d-grid">
                <div class="accordion-animation">
                  <div class="accordion-transform-wrapper">
                    <div class="accordion-content">{{ block.settings.content }}</div>
                  </div>
                </div>
              </div>
            </div>

            {%- when 'share' -%}
            <a href="" class="d-flex align-items-center mt-16">
              {% render 'icon-share' %}
              <p class="h4 ml-8">Share</p>
            </a>

          {%- endcase -%}
        {%- endfor -%}

      </div>
    </div>
  </div>
</section>

<script>

  const imgProducts = document.querySelectorAll('.image-item');
  const inputColor = document.querySelectorAll('input[type="radio"][name="id"]');

  inputColor.forEach(function(input) {
    input.addEventListener('change', function() {
      const variantId = this.value;
      const labelColors = document.querySelectorAll('.product-form__item-color');

      imgProducts.forEach(function(imgProduct) {
        if (imgProduct.getAttribute('data-variant-id') === variantId) {
          imgProduct.classList.add('active');
        } else {
          imgProduct.classList.remove('active');
        }
      });

      const currentSlideIndex = Array.from(document.querySelectorAll('.image-item')).findIndex(slide => slide.classList.contains('active'));
      const currentSlideNumber = currentSlideIndex + 1;
      document.querySelector('.slider__counter').textContent = currentSlideNumber + '/' + totalSlides;


// Remove the active class
      labelColors.forEach(function(labelColor) {
        labelColor.classList.remove('active');
      });

      if (this.checked) {
        const labelColor = this.closest('.product-form__item-color');
        labelColor.classList.add('active');
      }

    });
  });

// number counter
  let totalSlides = document.querySelectorAll('.image-item').length;
  let currentSlideIndex = Array.from(document.querySelectorAll('.image-item')).findIndex(slide => slide.classList.contains('active'));
  let currentSlideNumber = currentSlideIndex + 1;
  document.querySelector('.slider__counter').textContent = currentSlideNumber + '/' + totalSlides;

  let slides = Array.from(document.querySelectorAll('.image-item'));

  document.querySelector('.slider__prev').addEventListener('click', function(e) {
    e.preventDefault();
    let currentSlide = document.querySelector('.image-item.active');
    let prevSlide = currentSlide.previousElementSibling;
    if (! prevSlide) {
      let index = slides.indexOf(currentSlide);
      prevSlide = slides[(index - 1 + slides.length) % slides.length];
    }
    currentSlide.classList.remove('active');
    prevSlide.classList.add('active');

    let currentIndex = slides.indexOf(prevSlide);
    let totalSlides = slides.length;
    let prevIndex = (currentIndex - 1 + totalSlides) % totalSlides;
    let nextIndex = (currentIndex + 1) % totalSlides;
    let counter = document.querySelector('.slider__counter');
    counter.innerHTML = (currentIndex + 1) + '/' + totalSlides;
  });

  document.querySelector('.slider__next').addEventListener('click', function(e) {
    e.preventDefault();
    let currentSlide = document.querySelector('.image-item.active');
    let nextSlide = currentSlide.nextElementSibling;
    if (! nextSlide) {
      let slides = Array.from(document.querySelectorAll('.image-item'));
      let index = slides.indexOf(currentSlide);
      nextSlide = slides[(index + 1) % slides.length];
    }
    currentSlide.classList.remove('active');
    nextSlide.classList.add('active');
    let slides = Array.from(document.querySelectorAll('.image-item'));
    let currentIndex = slides.indexOf(nextSlide);
    let totalSlides = slides.length;
    let prevIndex = (currentIndex - 1 + totalSlides) % totalSlides;
    let nextIndex = (currentIndex + 1) % totalSlides;
    let counter = document.querySelector('.slider__counter');
    counter.innerHTML = (currentIndex + 1) + '/' + totalSlides;
  });

  const $ = document.querySelector.bind(document);
  const $$ = document.querySelectorAll.bind(document);

  const cartIcons = document.querySelector('.cartIcon');
  const cartItemCount = document.getElementById("cart-item-count");


  function updateCartItemCount() {
    fetch("/cart.json").then((response) => response.json()).then((data) => {
      const itemCount = data.item_count;
      cartItemCount.textContent = itemCount;
    }).catch((error) => {
      console.error("Error fetching cart data:", error);
    });
  }

  updateCartItemCount();

  const productItem = $(".js-product__item");
  const addToCartBtn = productItem.querySelector(".add-to-cart-btn");
  addToCartBtn.onclick = function() {
    const radioButtons = productItem.querySelectorAll('input[type="radio"][name="id"]');
    let checkedValue;
    for (const radioButton of radioButtons) {
      if (radioButton.checked) {
        checkedValue = radioButton.value;
        break;
      }
    }

// console.log(checkedValue);
    const quantity = productItem.querySelector(".quantity").value;
    const formData = new FormData();
    formData.append("id", checkedValue);
    formData.append("quantity", quantity);
    fetch("/cart/add.js", {
      method: "POST",
      body: formData
    }).then(function(response) {
      showSuccessToast();
      updateCartItemCount();
      return response.json();
    }).then(function(json) {
      console.log(json);
    }).catch(function(error) {
      console.error(error);
    });
  };
</script>

{% schema %}
  {
    "name": "Product information",
    "disabled_on": {
      "groups": ["header", "footer"]
    },
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "header",
        "content": "SECTION PADDING"
      }, {
        "type": "range",
        "id": "top_padding",
        "min": 0,
        "max": 80,
        "step": 1,
        "unit": "px",
        "label": "Top padding",
        "default": 64
      }, {
        "type": "range",
        "id": "bottom_padding",
        "min": 0,
        "max": 80,
        "step": 1,
        "unit": "px",
        "label": "Bottom padding",
        "default": 64
      }
    ],
    "blocks": [
      {
        "name": "Vendor",
        "type": "vendor",
        "settings": []
      },
      {
        "name": "Heading",
        "type": "heading",
        "settings": []
      },
      {
        "name": "Price",
        "type": "price",
        "settings": []
      },
      {
        "name": "Color",
        "type": "color",
        "settings": []
      }, {
        "name": "Description",
        "type": "description",
        "settings": []
      }, {
        "name": "Collapsible",
        "type": "collapsible",
        "settings": [
          {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "Collapsible row"
          }, {
            "type": "select",
            "id": "icon",
            "label": "Icon",
            "options": [
              {
                "value": "icon-ruler",
                "label": "Ruler"
              }, {
                "value": "icon-materials",
                "label": "Materials"
              }, {
                "value": "icon-leaf",
                "label": "Leaf"
              }, {
                "value": "icon-iron",
                "label": "Iron"
              }
            ],
            "default": "icon-ruler"
          }, {
            "type": "richtext",
            "id": "content",
            "label": "Row content"
          }
        ]
      }, {
        "name": "Share",
        "type": "share",
        "settings": []
      }
    ]
  }
{% endschema %}